-- Insert more questions
insert into question (question_id, question_text) values (6, 'Select the valid statement to declare and initialize an array.');
insert into question (question_id, question_text) values (7, 'In Java, Arrays are ___.');
insert into question (question_id, question_text) values (8, 'When is the object created with new keyword?');
insert into question (question_id, question_text) values (9, 'Identify the corrected definition of a package.');
insert into question (question_id, question_text) values (10, 'Identify the keyword among the following that makes a variable belong to a class, rather than being defined for each instance of the class.');
insert into question (question_id, question_text) values (11, 'In which of the following is toString() method defined?');
insert into question (question_id, question_text) values (12, 'What does compareTo() return?');
insert into question (question_id, question_text) values (13, 'To which of the following does the class String belong to?');
insert into question (question_id, question_text) values (14, 'How many constructors does the String class have?');
insert into question (question_id, question_text) values (15, 'Identify the return type of a method that does not return any value.');
insert into question (question_id, question_text) values (16, 'What is the output of Math.floor(3.6)?');
insert into question (question_id, question_text) values (17, 'Where does the system store parameters and local variables when a method is invoked?');
insert into question (question_id, question_text) values (18, 'Identify the modifier that cannot be used for constructor.');
insert into question (question_id, question_text) values (19, 'What are the variables declared in a class for use by all its methods called?');
insert into question (question_id, question_text) values (20, 'What is the implicit return type of a constructor?');
insert into question (question_id, question_text) values (21, 'When is the finalize() method called?');
insert into question (question_id, question_text) values (22, 'Identify the infinite loop.');
insert into question (question_id, question_text) values (23, 'What is a Runnable?');
insert into question (question_id, question_text) values (24, 'In which block is an Exception created by a try block caught?');
insert into question (question_id, question_text) values (25, 'Which of the following exception is thrown when a divided by zero statement is executed?');
insert into question (question_id, question_text) values (26, 'Where is the System class defined?');
insert into question (question_id, question_text) values (27, 'Which of the following interfaces defines the fundamental methods that are common to all types of groups of objects in Java?');
insert into question (question_id, question_text) values (28, 'Which of the following statements is true about the finalize() method?');
insert into question (question_id, question_text) values (29, 'What does the >>> operator do?');
insert into question (question_id, question_text) values (30, 'Identify the incorrect Java feature.');
insert into question (question_id, question_text) values (31, 'Which of the following is used to find and fix bugs in the program?');

-- Insert possible choices to more questions
insert into choice (choice_id, question_id, choice_text) values (21, 6, 'int[] A = [1, 2, 3]');
insert into choice (choice_id, question_id, choice_text) values (22, 6, 'int[] A = {1, 2, 3};');
insert into choice (choice_id, question_id, choice_text) values (23, 6, 'int[] A = (1, 2, 3);');
insert into choice (choice_id, question_id, choice_text) values (24, 6, 'int[][] A = {1, 2, 3};');
insert into choice (choice_id, question_id, choice_text) values (25, 7, 'Object references');
insert into choice (choice_id, question_id, choice_text) values (26, 7, 'Objects');
insert into choice (choice_id, question_id, choice_text) values (27, 7, 'Primitive data type');
insert into choice (choice_id, question_id, choice_text) values (28, 7, 'None');
insert into choice (choice_id, question_id, choice_text) values (29, 8, 'At run time');
insert into choice (choice_id, question_id, choice_text) values (30, 8, 'At compile time');
insert into choice (choice_id, question_id, choice_text) values (31, 8, 'Depends on the code');
insert into choice (choice_id, question_id, choice_text) values (32, 8, 'None');
insert into choice (choice_id, question_id, choice_text) values (33, 9, 'A package is a collection of editing tools');
insert into choice (choice_id, question_id, choice_text) values (34, 9, 'A package is a collection of classes');
insert into choice (choice_id, question_id, choice_text) values (35, 9, 'A package is a collection of classes and interfaces');
insert into choice (choice_id, question_id, choice_text) values (36, 9, 'A package is a collection of interfaces');
insert into choice (choice_id, question_id, choice_text) values (37, 10, 'final');
insert into choice (choice_id, question_id, choice_text) values (38, 10, 'static');
insert into choice (choice_id, question_id, choice_text) values (39, 10, 'volatile');
insert into choice (choice_id, question_id, choice_text) values (40, 10, 'abstract');
insert into choice (choice_id, question_id, choice_text) values (41, 11, 'java.lang.Object');
insert into choice (choice_id, question_id, choice_text) values (42, 11, 'java.lang.String');
insert into choice (choice_id, question_id, choice_text) values (43, 11, 'java.lang.util');
insert into choice (choice_id, question_id, choice_text) values (44, 11, 'None');
insert into choice (choice_id, question_id, choice_text) values (45, 12, 'True');
insert into choice (choice_id, question_id, choice_text) values (46, 12, 'False');
insert into choice (choice_id, question_id, choice_text) values (47, 12, 'An int value');
insert into choice (choice_id, question_id, choice_text) values (48, 12, 'None');
insert into choice (choice_id, question_id, choice_text) values (49, 13, 'java.lang');
insert into choice (choice_id, question_id, choice_text) values (50, 13, 'java.awt');
insert into choice (choice_id, question_id, choice_text) values (51, 13, 'java.applet');
insert into choice (choice_id, question_id, choice_text) values (52, 13, 'java.string');
insert into choice (choice_id, question_id, choice_text) values (53, 14, '3');
insert into choice (choice_id, question_id, choice_text) values (54, 14, '7');
insert into choice (choice_id, question_id, choice_text) values (55, 14, '13');
insert into choice (choice_id, question_id, choice_text) values (56, 14, '20');
insert into choice (choice_id, question_id, choice_text) values (57, 15, 'int');
insert into choice (choice_id, question_id, choice_text) values (58, 15, 'void');
insert into choice (choice_id, question_id, choice_text) values (59, 15, 'double');
insert into choice (choice_id, question_id, choice_text) values (60, 15, 'None');
insert into choice (choice_id, question_id, choice_text) values (61, 16, '3');
insert into choice (choice_id, question_id, choice_text) values (62, 16, '3.0');
insert into choice (choice_id, question_id, choice_text) values (63, 16, '4');
insert into choice (choice_id, question_id, choice_text) values (64, 16, '4.0');
insert into choice (choice_id, question_id, choice_text) values (65, 17, 'Heap');
insert into choice (choice_id, question_id, choice_text) values (66, 17, 'Stack');
insert into choice (choice_id, question_id, choice_text) values (67, 17, 'Array');
insert into choice (choice_id, question_id, choice_text) values (68, 17, 'Tree');
insert into choice (choice_id, question_id, choice_text) values (69, 18, 'public');
insert into choice (choice_id, question_id, choice_text) values (70, 18, 'protected');
insert into choice (choice_id, question_id, choice_text) values (71, 18, 'private');
insert into choice (choice_id, question_id, choice_text) values (72, 18, 'static');
insert into choice (choice_id, question_id, choice_text) values (73, 19, 'Object');
insert into choice (choice_id, question_id, choice_text) values (74, 19, 'Instance variables');
insert into choice (choice_id, question_id, choice_text) values (75, 19, 'Reference variable');
insert into choice (choice_id, question_id, choice_text) values (76, 19, 'None');
insert into choice (choice_id, question_id, choice_text) values (77, 20, 'No return type');
insert into choice (choice_id, question_id, choice_text) values (78, 20, 'A class object in which it is defined');
insert into choice (choice_id, question_id, choice_text) values (79, 20, 'void');
insert into choice (choice_id, question_id, choice_text) values (80, 20, 'None');
insert into choice (choice_id, question_id, choice_text) values (81, 21, 'Before garbage collection');
insert into choice (choice_id, question_id, choice_text) values (82, 21, 'Before an object goes out of scope');
insert into choice (choice_id, question_id, choice_text) values (83, 21, 'Before a variable goes out of scope');
insert into choice (choice_id, question_id, choice_text) values (84, 21, 'None');
insert into choice (choice_id, question_id, choice_text) values (85, 22, 'for(;;)');
insert into choice (choice_id, question_id, choice_text) values (86, 22, 'for(int i=0; i<1; iâ€”)');
insert into choice (choice_id, question_id, choice_text) values (87, 22, 'for(int i=0; ;i++)');
insert into choice (choice_id, question_id, choice_text) values (88, 22, 'All of them');
insert into choice (choice_id, question_id, choice_text) values (89, 23, 'Abstract class');
insert into choice (choice_id, question_id, choice_text) values (90, 23, 'Interface');
insert into choice (choice_id, question_id, choice_text) values (91, 23, 'Class');
insert into choice (choice_id, question_id, choice_text) values (92, 23, 'Method');
insert into choice (choice_id, question_id, choice_text) values (93, 24, 'catch');
insert into choice (choice_id, question_id, choice_text) values (94, 24, 'throw');
insert into choice (choice_id, question_id, choice_text) values (95, 24, 'final');
insert into choice (choice_id, question_id, choice_text) values (96, 24, 'none');
insert into choice (choice_id, question_id, choice_text) values (97, 25, 'NullPointerException');
insert into choice (choice_id, question_id, choice_text) values (98, 25, 'NumberFormatException');
insert into choice (choice_id, question_id, choice_text) values (99, 25, 'ArithmeticException');
insert into choice (choice_id, question_id, choice_text) values (100, 25, 'None');
insert into choice (choice_id, question_id, choice_text) values (101, 26, 'java.lang package');
insert into choice (choice_id, question_id, choice_text) values (102, 26, 'java.util package');
insert into choice (choice_id, question_id, choice_text) values (103, 26, 'java.io package');
insert into choice (choice_id, question_id, choice_text) values (104, 26, 'None');
insert into choice (choice_id, question_id, choice_text) values (105, 27, 'Comparator');
insert into choice (choice_id, question_id, choice_text) values (106, 27, 'EventListener');
insert into choice (choice_id, question_id, choice_text) values (107, 27, 'Set');
insert into choice (choice_id, question_id, choice_text) values (108, 27, 'Collection');
insert into choice (choice_id, question_id, choice_text) values (109, 28, 'It can be called zero or one time');
insert into choice (choice_id, question_id, choice_text) values (110, 28, 'It can be called zero or more times');
insert into choice (choice_id, question_id, choice_text) values (111, 28, 'It can be called exactly once');
insert into choice (choice_id, question_id, choice_text) values (112, 28, 'It can be called one or more times');
insert into choice (choice_id, question_id, choice_text) values (113, 29, 'Right shift operator');
insert into choice (choice_id, question_id, choice_text) values (114, 29, 'Left shift operator');
insert into choice (choice_id, question_id, choice_text) values (115, 29, 'Zero fill left shift');
insert into choice (choice_id, question_id, choice_text) values (116, 29, 'Zero fill right shift');
insert into choice (choice_id, question_id, choice_text) values (117, 30, 'Object oriented');
insert into choice (choice_id, question_id, choice_text) values (118, 30, 'Use of pointers');
insert into choice (choice_id, question_id, choice_text) values (119, 30, 'Dynamic');
insert into choice (choice_id, question_id, choice_text) values (120, 30, 'Architectural neutral');
insert into choice (choice_id, question_id, choice_text) values (121, 31, 'JDK');
insert into choice (choice_id, question_id, choice_text) values (122, 31, 'JRE');
insert into choice (choice_id, question_id, choice_text) values (123, 31, 'JVM');
insert into choice (choice_id, question_id, choice_text) values (124, 31, 'JDB');

-- Insert right answers to more questions
insert into answer (answer_id, question_id, choice_id) values (6, 6, 22);
insert into answer (answer_id, question_id, choice_id) values (7, 7, 26);
insert into answer (answer_id, question_id, choice_id) values (8, 8, 29);
insert into answer (answer_id, question_id, choice_id) values (9, 9, 35);
insert into answer (answer_id, question_id, choice_id) values (10, 10, 38);
insert into answer (answer_id, question_id, choice_id) values (11, 11, 41);
insert into answer (answer_id, question_id, choice_id) values (12, 12, 47);
insert into answer (answer_id, question_id, choice_id) values (13, 13, 49);
insert into answer (answer_id, question_id, choice_id) values (14, 14, 55);
insert into answer (answer_id, question_id, choice_id) values (15, 15, 58);
insert into answer (answer_id, question_id, choice_id) values (16, 16, 62);
insert into answer (answer_id, question_id, choice_id) values (17, 17, 66);
insert into answer (answer_id, question_id, choice_id) values (18, 18, 72);
insert into answer (answer_id, question_id, choice_id) values (19, 19, 74);
insert into answer (answer_id, question_id, choice_id) values (20, 20, 78);
insert into answer (answer_id, question_id, choice_id) values (21, 21, 81);
insert into answer (answer_id, question_id, choice_id) values (22, 22, 88);
insert into answer (answer_id, question_id, choice_id) values (23, 23, 90);
insert into answer (answer_id, question_id, choice_id) values (24, 24, 93);
insert into answer (answer_id, question_id, choice_id) values (25, 25, 99);
insert into answer (answer_id, question_id, choice_id) values (26, 26, 101);
insert into answer (answer_id, question_id, choice_id) values (27, 27, 108);
insert into answer (answer_id, question_id, choice_id) values (28, 28, 109);
insert into answer (answer_id, question_id, choice_id) values (29, 29, 116);
insert into answer (answer_id, question_id, choice_id) values (30, 30, 118);
insert into answer (answer_id, question_id, choice_id) values (31, 31, 124);

