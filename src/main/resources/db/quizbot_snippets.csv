java,"int Integer = 24;
char String = 'I';
System.out.print(Integer);
System.out.print(String);",32
java,"public class Solution {
    public static void main(String[] args) {
        short x = 10;
        x = x*5;
        System.out.print(x);
    }
}",33
java,"public class Solution {
    public static void main(String[] args) {
        byte x = 127;
        x++;
        x++;
        System.out.print(x);
    }
}",34
java,"public class Solution {
    public static void main(String[] args) {
        int[] x = {120, 200, 016};
        for (int i=0; i<x.length; i++) {
            System.out.print(x[i] + "" "");
        }
    }
}",35
java,"int[] A = {0, 2, 4, 1, 3};
for (int i=0; i<A.length; i++) {
    A[i] = A[(A[i] + 3) % A.length];
}",36
,"1. They must access only static data.
2. They can only call other static methods.
3. They cannot refer to this or super.",37
java,"package com.mypackage;
public class Solution {
    private int res = 100;
}",38
java,"String str = ""abcde"";
System.out.println(str.substring(1, 3));",39
java,"String str = ""Hellow"";
System.out.println(str.indexOf('t'));",40
java,"public class Test {
    public static void main(String args[]) {
        String str1 = ""one"";
        String str2 = ""two"";
        System.out.println(str1.concat(str2));
    }
}",41
java,"String str1 = ""QuizBot"".replace('z','s');",42
java,"String a = new String(""QuizBot"");
String b = new String(""QuizBot"");
Strinc c = ""QuizBot"";
String d = ""QuizBot"";",43
java,"int ++a = 100;
System.out.println(++a);",44
java,"if (1 + 1 + 1 + 1 + 1 == 5) {
    System.out.print(""TRUE"");
} else {
    System.out.print(""FALSE"");
}",45
java,"public class Solution {
    public static void main(Stringâ€¦ args) {
        int x = 5;
        x * = (3 + 7);
        System.out.println(x);
    }
}",46
java,"public class Solution {}",47
java,"public class Solution {}",48
java,"public class Solution {
    public static void main(String args[]) {
        int i;
        for (i=1; i<6; i++) { 
            if (i > 3) continue;
        }
        System.out.println(i);
    }
}",49
java,"int count = 0;
do {
  System.out.println(""QuizBot"");
  count++;
} while (count < 10);",50
java,"class Increment {
    public static void main(String args[]) {
        int g = 3;
        System.out.print(++g * 8);
    }
}",56
java,"class Output {
    public static void main(String args[]) {
        double a, b,c;
        a = 3.0/0;
        b = 0/4.0;
        c = 0/0.0;

        System.out.println(a);
        System.out.println(b);
        System.out.println(c);
    }
}",58
java,"class VariableScope {
    public static void main(String args[]) {
        int x;
        x = 5;
        {
            int y = 6;
            System.out.print(x + "" "" + y);
        }
        System.out.println(x + "" "" + y);
    }
}",60
java,"class LeftShiftOperator {
    public static void main(String args[]) {
        byte x = 64;
        int i;
        byte y;
        i = x << 2;
        y = (byte) (x << 2);
        System.out.print(i + "" "" + y);
    }
}",62
java,"class Box {
    int width;
    int height;
    int length;
}
class Main {
    public static void main(String args[]) {
        box obj = new box();
        obj.width = 10;
        obj.height = 2;
        obj.length = 10;
        int y = obj.width * obj.height * obj.length;
        System.out.print(y);
    }
}",63
java,"class Output {
    public static void main(String args[]) {
        int arr[] = {1, 2, 3, 4, 5};
        for (int i = 0; i < arr.length - 2;++i)
            System.out.println(arr[i] + "" "");
    }
}",65
java,"class Abc {
    public static void main(String args[]) {
        if(args.length > 0)
            System.out.println(args.length);
    }
}",66
java,"class StringDemo {
    public static void main(String args[]) {
        char chars[] = {'a', 'b', 'c'};
        String s = new String(chars);
        System.out.println(s);
    }
}",69
java,"class Recursion {
    int func(int n) {
        int result;
        if (n == 1)
            return 1;
        result = func (n - 1);
        return result;
    }
}
class Output {
    public static void main(String args[]) {
        recursion obj = new recursion();
        System.out.print(obj.func(5));
    }
}",71
java,"class Output {
    public static void main(String args[]) {
        String c = ""Hello i love java"";
        boolean var;
        var = c.startsWith(""hello"");
        System.out.println(var);
    }
}",72
java,"class Output {
    public static void main(String args[]) {
        StringBuffer s1 = new StringBuffer(""Quiz"");
        StringBuffer s2 = s1.reverse();
        System.out.println(s2);
    }
}",74
java,"class Output {
    public static void main(String args[]) {
        Integer i = new Integer(257);
        byte x = i.byteValue();
        System.out.print(x);
    }
}",75
java,"class Output {
    public static void main(String args[]) {
        double x = 2.0;
        double y = 3.0;
        double z = Math.pow( x, y );
        System.out.print(z);
    }
}",76
java,"class Output {
    public static void main(String args[]) {
        double x = 3.14;
        int y = (int) Math.ceil(x);
        System.out.print(y);
    }
}",78
java,"import java.net.*;
class Networking {
    public static void main(String[] args) throws Exception {
        URL obj = new URL(""https://www.sanfoundry.com/javamcq"");
        URLConnection obj1 = obj.openConnection();
        int len = obj1.getContentLength();
        System.out.print(len);
    }
}",79
java,"import java.net.*;
class Networking {
    public static void main(String[] args) throws MalformedURLException {
        URL obj = new URL(""https://www.sanfoundry.com/javamcq"");
        System.out.print(obj.toExternalForm());
    }
}",81
java,"import java.util.*;
class Arraylists {
    public static void main(String args[]) {
        ArrayLists obj = new ArrayLists();
        obj.add(""A"");
        obj.add(""B"");
        obj.add(""C"");
        obj.add(1, ""D"");
        System.out.println(obj);
    }
}",82
java,"import java.util.*;
class CollectionIterators {
    public static void main(String args[]) {
        LinkedList list = new LinkedList();
        list.add(new Integer(2));
        list.add(new Integer(8));
        list.add(new Integer(5));
        list.add(new Integer(1));
        Iterator i = list.iterator();
        Collections.reverse(list);
        Collections.sort(list);
        while(i.hasNext())
            System.out.print(i.next() + "" "");
    }
}",84
java,"class NewThread extends Thread {
    Thread t;
    NewThread() {
        t1 = new Thread(this,""Thread_1"");
        t2 = new Thread(this,""Thread_2"");
        t1.start();
        t2.start();
    }

    public void run() {
        t2.setPriority(Thread.MAX_PRIORITY);
        System.out.print(t1.equals(t2));
    }
}

class MultithreadedPrograming {
    public static void main(String args[]) {
        new NewThread();
    }
}",86
java,"final class A {
    int i;
}

class B extends A {
    int j;
    System.out.println(j + "" "" + i);
}

class Inheritance {
    public static void main(String args[]) {
        B obj = new B();
        obj.display();
    }
}",88
java,"class Overload {
    int x;
    double y;

    void add(int a , int b) {
        x = a + b;
    }

    void add(double c , double d) {
        y = c + d;
    }

    overload() {
        this.x = 0;
        this.y = 0;
    }
}

class OverloadMethods
{
    public static void main(String args[]) {
        overload obj = new overload();
        int a = 2;
        double b = 3.2;
        obj.add(a, a);
        obj.add(b, b);
        System.out.println(obj.x + "" "" + obj.y);
    }
}",91
